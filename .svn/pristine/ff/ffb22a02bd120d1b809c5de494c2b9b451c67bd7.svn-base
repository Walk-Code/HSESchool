package com.zhuochuang.hsej.store;

import org.json.JSONArray;
import org.json.JSONObject;

import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.model.DataLoader;
import com.model.TaskType;
import com.util.ContentAdapter;
import com.zhuochuang.hsej.BaseActivity;
import com.zhuochuang.hsej.R;


public class StoreShoppingAddressActivity extends BaseActivity{
	private ListView mListView;
	private JSONArray mItemArr;
	private ContentAdapter mAdapter;
	private static final int RESULTCODE = 1;
	private int mIndex;
	
	@Override
	protected void onCreate(Bundle arg0) {
		super.onCreate(arg0);
		setContentView(R.layout.store_choose_address);
		setTitleText(R.string.contacter_address);
		initView();
		DataLoader.getInstance().startTaskForResult(TaskType.TaskOrMethod_UserAddressListUserAddress, null, this);
	}
	
	private void initView() {
		mListView = (ListView) findViewById(R.id.store_choose_address_listview);
		mListView.setAdapter(mAdapter = new ContentAdapter(){

			@Override
			public int getCount() {
				if(mItemArr != null){
					return mItemArr.length();
				}
				return 0;
			}

			@Override
			public View getView(int position, View convertView, ViewGroup parent) {
				if(convertView == null){
					convertView = LayoutInflater.from(StoreShoppingAddressActivity.this).inflate(R.layout.store_shopping_address_item, null);
					//convertView.setLayoutParams(new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT,Utils.getScreenHeight(StoreShoppingAddressActivity.this)/9));
				}
				 JSONObject jsonObject = mItemArr.optJSONObject(position);
				 ((TextView) convertView.findViewById(R.id.receiving_name)).setText(jsonObject.optString("name").toString());
				 ((TextView) convertView.findViewById(R.id.receiving_phone)).setText(jsonObject.optString("phone").toString());
				 ((TextView) convertView.findViewById(R.id.receiving_address)).setText(jsonObject.optString("address").toString());
				 if(jsonObject.optInt("mark") == 1 ){
					 ((TextView) convertView.findViewById(R.id.address_default)).setVisibility(View.VISIBLE);
					// ((ImageView) convertView.findViewById(R.id.store_address_checked)).setVisibility(View.VISIBLE);
				 }else{
					 ((TextView) convertView.findViewById(R.id.address_default)).setVisibility(View.GONE);
					// ((ImageView) convertView.findViewById(R.id.store_address_checked)).setVisibility(View.GONE);
				 }
				if(mIndex == position){
					convertView.findViewById(R.id.store_address_checked).setVisibility(View.VISIBLE);
				}else{
					convertView.findViewById(R.id.store_address_checked).setVisibility(View.GONE);
				}
				return convertView;
			}
		  });
		
		mListView.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				mIndex = position;
				mAdapter.notifyDataSetChanged();
				if(null != mItemArr){
				JSONObject jsonObject = mItemArr.optJSONObject(position);				
				Intent intent = new Intent();
				intent.putExtra("Name", jsonObject.optString("name").toString());
				intent.putExtra("Phone", jsonObject.optString("phone").toString());
				intent.putExtra("Address", jsonObject.optString("address").toString());
				setResult(RESULTCODE, intent);
				finish();
				}else{
					Toast.makeText(StoreShoppingAddressActivity.this, "选择失败", Toast.LENGTH_SHORT).show();
				}
			}
		});
		
		findViewById(R.id.add_address).setVisibility(View.VISIBLE);
		//添加新地址
		findViewById(R.id.store_add_address).setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View arg0) {
				StoreShoppingAddressActivity.this.startActivity(new Intent(StoreShoppingAddressActivity.this,StoreAddAddressActivity.class));
				
			}
		});
		
		mListView.setOnItemLongClickListener(new OnItemLongClickListener() {

			@Override
			public boolean onItemLongClick(AdapterView<?> parent, View view,
					int position, long id) {			
				if(null != mItemArr){
					JSONObject jsonObject = mItemArr.optJSONObject(position);
					Intent intent = new Intent(StoreShoppingAddressActivity.this,StoreUpdateShoppingAddressActivity.class);
					intent.putExtra("Name", jsonObject.optString("name").toString());
					intent.putExtra("Phone", jsonObject.optString("phone").toString());
					intent.putExtra("Address", jsonObject.optString("address").toString());
					intent.putExtra("id", jsonObject.optString("id").toString());
					startActivity(intent);
				}
				return true;
			}
		});
	}
	
	@Override
	protected void onResume() {
		super.onResume();
		DataLoader.getInstance().startTaskForResult(TaskType.TaskOrMethod_UserAddressListUserAddress, null, this);
		mAdapter.notifyDataSetChanged();
	}
	//设为默认地址
	public void setDefaultAddress(JSONArray result){
		int test = 0;
		for(int i = 0;i < result.length(); i++){
			JSONObject jsonObject = result.optJSONObject(i);
			if(1 == jsonObject.optInt("mark")){
				test = 1;
			}else{
				test = 0;
			}
		}
		if(test == 0){
		DataLoader.getInstance().startTaskForResult(TaskType.TaskOrMethod_UserAddressUpdateUserAddress,
				DataLoader.getInstance().setUpdateUserAddressTypeParams(result.optJSONObject(test).optLong("id")+"",
				result.optJSONObject(test).optString("name"),result.optJSONObject(test).optString("phone"),result.optJSONObject(test).optString("area"),
				result.optJSONObject(test).optString("address"),1), this);
		}
	}
	
	@Override
	public void taskFinished(TaskType type, Object result, boolean isHistory) {
		super.taskFinished(type, result, isHistory);
		if(result == null){
			return;
		}
		
		if(result instanceof Error){
			Toast.makeText(StoreShoppingAddressActivity.this, ((Error) result).getMessage(), Toast.LENGTH_SHORT).show();
			return;
		}
		
		if(type == TaskType.TaskOrMethod_UserAddressListUserAddress){
			if(((JSONObject)result).has("items")){
				mItemArr = ((JSONObject)result).optJSONArray("items");
				if(mItemArr != null && mItemArr.length() > 0){
					setDefaultAddress(mItemArr);
					mAdapter.notifyDataSetChanged();
				}
			}
		}
	}
}

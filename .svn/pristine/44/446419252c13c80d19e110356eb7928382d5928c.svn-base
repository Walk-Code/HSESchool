package com.zhuochuang.hsej.store;

import java.util.HashMap;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.os.Handler;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.inputmethod.EditorInfo;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.PopupWindow;
import android.widget.TextView;
import android.widget.TextView.OnEditorActionListener;

import com.util.ContentAdapter;
import com.zhuochuang.hsej.BaseActivity;
import com.zhuochuang.hsej.R;

public class StoreGoodsCategoryActivity extends BaseActivity{
	private int selectedPosition = 0;
	private PopupWindow mPopupWindow;
	private LinearLayout popupLayout;
	private ListView rootListView;
	private ListView subListView;
	private String [] items ;
	private ContentAdapter mAdapter,subAdapter;
	public static final int STOREGOODS = 1;
	JSONArray arr = null;
	JSONArray mGoodsType = null;
	private Map<String,Object> map;
	
	@Override
	protected void onCreate(Bundle arg0) {
		super.onCreate(arg0);
		mMainLayout.removeAllViews();
		setContentView(R.layout.store_persion_category);
		map = new HashMap<String, Object>();
		items = getIntent().getStringArrayExtra("category");
		try {
			mGoodsType = new JSONArray(getIntent().getStringExtra("goodsType"));
			for(int i = 0;i < mGoodsType.length();i++){
				JSONObject obj = mGoodsType.optJSONObject(i);
				JSONArray array = obj.optJSONArray("children");				
				map.put(items[i], array);
			}			
		} catch (JSONException e) {
			e.printStackTrace();
		} 
		initView();		
	}
	
	@SuppressLint("NewApi")
	private void initView() {
		rootListView = (ListView) findViewById(R.id.root_listview);
		subListView = (ListView) findViewById(R.id.sub_listview);
		rootListView.setAdapter(mAdapter = new ContentAdapter(){

			@Override
			public int getCount() {
				return items != null ? items.length : 0;
			}

			@Override
			public View getView(int position, View convertView, ViewGroup parent) {
				ViewHolder holder;
				if(convertView == null){					
					holder = new ViewHolder();
					convertView = LayoutInflater.from(StoreGoodsCategoryActivity.this).inflate(R.layout.store_detail_popupwindow_item,parent,false);
					holder.item_text =(TextView) convertView.findViewById(R.id.item_name_text);
					holder.item_layout = (LinearLayout)convertView.findViewById(R.id.root_item);
					convertView.setTag(holder);
				}else{
					holder = (ViewHolder)convertView.getTag();
				}
								
				if(selectedPosition == position){
					holder.item_layout.setBackgroundColor(Color.parseColor("#f0f0f0"));
					holder.item_text.setTextColor(Color.RED);
				}else{
					holder.item_layout.setBackgroundColor(Color.WHITE);
					holder.item_text.setTextColor(Color.BLACK);
				}
				holder.item_text.setText(items[position]);
				return convertView;
			}
			
			class ViewHolder{
				TextView item_text;
				LinearLayout item_layout;
			}
		});
		
		rootListView.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,int position, long id) {
					selectedPosition = position;
					mAdapter.notifyDataSetChanged();
					subAdapter.notifyDataSetChanged();
				
			}
			
		});
		
		new Handler().post(new Runnable() {
			
			@Override
			public void run() {
				subListView.setAdapter(subAdapter = new ContentAdapter(){				
					@Override
					public int getCount() {
						arr =  (JSONArray) map.get(items[selectedPosition]);					
						return arr != null ? arr.length() : 0;
					}

					@Override
					public View getView(int position, View convertView, ViewGroup parent) {
						ViewHolder holder;
						if (convertView == null) {
							holder = new ViewHolder();				
							convertView = LayoutInflater.from(StoreGoodsCategoryActivity.this).inflate(R.layout.store_popupwindow_item,parent,false);
							holder.item_text = (TextView) convertView.findViewById(R.id.store_popupwindowItem);
							holder.item_sum =  (TextView) convertView.findViewById(R.id.store_popupwindowItem_count);			
							convertView.setTag(holder);
						} else {
							holder = (ViewHolder) convertView.getTag();
						}
						JSONObject jsonObject = arr.optJSONObject(position);
						holder.item_text.setText(jsonObject.optString("name"));
						holder.item_sum.setText(jsonObject.optString("goodsSum"));
						return convertView;
					}
					class ViewHolder{
						TextView item_text;
						TextView item_sum;
						ImageView StoreImage;
						TextView StoreName;
					}
				});
				
			}
		});
		
		subListView.setOnItemClickListener(new OnItemClickListener() {

			@SuppressLint("ShowToast")
			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				JSONObject obj = mGoodsType.optJSONObject(selectedPosition);
				JSONArray arr = (JSONArray) map.get(items[selectedPosition]);			
				 Intent intent = new Intent(StoreGoodsCategoryActivity.this,StoreDetailActivity.class);
				 intent.putExtra("parentType", obj.optString("id"));
				 intent.putExtra("parentName", items[selectedPosition]);
				 intent.putExtra("subType", arr.optJSONObject(position).optString("id"));
				 intent.putExtra("shopId",getIntent().getStringExtra("shopId"));
				 intent.putExtra("StoreGoodsCategoryActivity",arr.optJSONObject(position).optString("name"));
				 intent.putExtra("storeGoods", STOREGOODS);
				 intent.putExtra("name",((EditText)findViewById(R.id.search_result)).getText().toString());
				 intent.putExtra("category", items);
				 intent.putExtra("num", selectedPosition);
				 intent.putExtra("Data",mGoodsType.toString());			 
				 startActivity(intent);				
			}
			
		});
		
		  ((EditText)findViewById(R.id.search_result)).setCursorVisible(false);
		  
		  findViewById(R.id.search_result).setOnClickListener(new OnClickListener() {	
			  
				@Override
				public void onClick(View v) {
					((EditText)findViewById(R.id.search_result)).setCursorVisible(true);
					
				}
			   });
		  
		 ((EditText)findViewById(R.id.search_result)).setOnEditorActionListener(new OnEditorActionListener() {	
			 
				@Override
				public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
					if(actionId ==EditorInfo.IME_ACTION_SEARCH){							
						//跳转到商品列表界面 
						 Intent intent = new Intent(StoreGoodsCategoryActivity.this,StoreDetailActivity.class);
						 intent.putExtra("SearchResult",((EditText)findViewById(R.id.search_result)).getText().toString());
						 startActivity(intent);							
						 return true;
					}
					return false;
				}
		   });
		 
		 findViewById(R.id.store_back).setOnClickListener(new OnClickListener() {	
			 
			@Override
			public void onClick(View v) {
				finish();
				
			}
		});
	}
	
}

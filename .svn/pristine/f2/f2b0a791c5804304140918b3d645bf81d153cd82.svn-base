package com.zhuochuang.hsej;

import org.json.JSONArray;
import org.json.JSONObject;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.widget.AbsListView;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.Gallery;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.layout.PullToRefreshListView;
import com.layout.PullToRefreshListView.OnRefreshListener;
import com.layout.qrcode.QRcodeCaptureActivity;
import com.model.Configs;
import com.model.DataLoader;
import com.model.EventManager;
import com.model.ImageLoaderConfigs;
import com.model.TaskType;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.util.AutoGallery;
import com.util.ContentAdapter;
import com.util.PageGuide;
import com.util.StaticGridView;
import com.util.Utils;

@SuppressLint("InflateParams")
@SuppressWarnings("deprecation")
public class MySchoolyardFragment extends BaseFragment{

	private PullToRefreshListView mListView;
	private ContentAdapter mListViewAdapter;
	
	private LinearLayout mHeaderView;
	private AutoGallery mBannerGallery;
	private AutoGallery mBulltinGallery;
	private PageGuide mPageGuide;
	private StaticGridView mGridView;
	private ContentAdapter mGridAdapter;
	
	private JSONArray mBannerArr;
	private JSONArray mCampusServersArr;
	private JSONArray mNotifiesArr;
	private JSONArray mAdsArr;
	private boolean mIsNeedRefresh = false;	
	private Handler mHandler;
	
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		mMainLayout = (ViewGroup) LayoutInflater.from(mActivity).inflate(R.layout.fragment_myschoolyard, null);
		
		initListView();
		
		mMainLayout.findViewById(R.id.topnavbar_qrcodelayout).setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				/*Intent intent = new Intent();
				intent.setClass(mActivity, QRcodeCaptureActivity.class);
				intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
				startActivityForResult(intent, Configs.REQUESTCODE_Qrcode);*/
				Intent intent = new Intent(mActivity, QRcodeCaptureActivity.class);
				startActivity(intent);
			}
		});
		
		mMainLayout.findViewById(R.id.topnavbar_searchlayout).setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				//startActivity(new Intent(mActivity, CourseListActivity.class));
				startActivity(new Intent(mActivity, SearchActivity.class));
			}
		});
		
		EventManager.getInstance().setHandlerListenner(mHandler = new Handler(){

			@Override
			public void handleMessage(Message msg) {
				// TODO Auto-generated method stub
				super.handleMessage(msg);
				switch (msg.what) {
				case EventManager.EventType_VoteChange:
				case EventManager.EventType_SurveyChange:
					if(mAdsArr == null || mAdsArr.length() == 0){
						return;
					}
					for(int i = 0; i < mAdsArr.length(); i++){
						JSONObject obj = mAdsArr.optJSONObject(i);
						try {
							JSONObject resourceObj = obj.optJSONObject("resource");
							if(resourceObj.optString("id").equalsIgnoreCase((String) ((Object[])msg.obj)[0])){
								resourceObj.put("favoriteStatus", "6");
								break;
							}
						} catch (Exception e) {
							// TODO: handle exception
						}
					}
					if(mListViewAdapter != null){
						mListViewAdapter.notifyDataSetChanged();
					}
					break;

				default:
					break;
				}
			}
		});
	}
	
	private void initHeaderView(){		
		mHeaderView = (LinearLayout) LayoutInflater.from(mActivity).inflate(R.layout.fragment_myschoolyard_header, null);
		mPageGuide = (PageGuide) mHeaderView.findViewById(R.id.pageguide);
		mBannerGallery = (AutoGallery) mHeaderView.findViewById(R.id.gallery_banner);
		mGridView = (StaticGridView) mHeaderView.findViewById(R.id.gridView);
		mBulltinGallery = (AutoGallery) mHeaderView.findViewById(R.id.gallery_bulltin);
		mBannerGallery.setAdapter(new ContentAdapter(){
			@Override
			public int getCount() {
				// TODO Auto-generated method stub
				if(mBannerArr == null || mBannerArr.length() == 0){
					return 0;
				}
				return Integer.MAX_VALUE;
			}

			@Override
			public View getView(int position, View convertView, ViewGroup parent) {
				// TODO Auto-generated method stub
				if (position >= mBannerArr.length()) {
	                position = position % mBannerArr.length();
	            }
				JSONObject obj = mBannerArr.optJSONObject(position);
				if(convertView == null){
					convertView = ViewGroup.inflate(mActivity, R.layout.listcell_myschoolyard_headercell, null);
					//convertView.setLayoutParams(new Gallery.LayoutParams(LayoutParams.MATCH_PARENT, Utils.realHeight(mActivity, 398)));
					convertView.setLayoutParams(new Gallery.LayoutParams(LayoutParams.MATCH_PARENT, Utils.realSchoolBannerHeight(mActivity)));
				}
				ImageLoader.getInstance().displayImage(obj.optString("image"), ((ImageView)convertView.findViewById(R.id.imageview)), ImageLoaderConfigs.displayImageOptionsBg);
				return convertView;
			}
		});
		mBannerGallery.setOnItemSelectedListener(new OnItemSelectedListener() {
			@Override
			public void onItemSelected(AdapterView<?> parent, View view,
					int position, long id) {
				// TODO Auto-generated method stub
				if (position >= mBannerArr.length()) {
	                position = position % mBannerArr.length();
	            }
				mPageGuide.setSelect(position);
				
				JSONObject obj = mBannerArr.optJSONObject(position);
				((TextView)mHeaderView.findViewById(R.id.text)).setText(obj.optString("title"));
			}

			@Override
			public void onNothingSelected(AdapterView<?> parent) {
				// TODO Auto-generated method stub
				
			}
		});
		mBannerGallery.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				// TODO Auto-generated method stub
				if (position >= mBannerArr.length()) {
	                position = position % mBannerArr.length();
	            }
				JSONObject obj = mBannerArr.optJSONObject(position);
				if(obj != null){
					JSONObject resourceObj = obj.optJSONObject("resource");
					if(resourceObj == null){
						return;
					}
					
					DataLoader.getInstance().openResource(mActivity, obj.optInt("ownerResource"), resourceObj);
				}
				
//				PhotoViewer photoViewer = new PhotoViewer(mActivity, 0);
//				photoViewer.setSinglePicUrl("http://cdnq.duitang.com/uploads/item/201505/22/20150522173721_sMHBi.thumb.700_0.jpeg");
//				photoViewer.showPhotoViewer(view);
			}
		});
		mBulltinGallery.setAdapter(new ContentAdapter(){
			@Override
			public int getCount() {
				// TODO Auto-generated method stub
				if(mNotifiesArr == null || mNotifiesArr.length() == 0){
					return 0;
				}
				return Integer.MAX_VALUE;
			}
			
			@Override
			public View getView(int position, View convertView, ViewGroup parent) {
				// TODO Auto-generated method stub
				if(convertView == null){
					convertView = ViewGroup.inflate(mActivity, R.layout.listcell_mtschoolyard_header_bulltincell, null);
					//convertView.setLayoutParams(new Gallery.LayoutParams(LayoutParams.MATCH_PARENT, Utils.realHeight(mActivity, 40)));
				}
				
				if (position >= mNotifiesArr.length()) {
	                position = position % mNotifiesArr.length();
	            }
				JSONObject obj = mNotifiesArr.optJSONObject(position);
				if(obj != null){
					((TextView)convertView.findViewById(R.id.textview)).setText(obj.optString("name"));
					ImageLoader.getInstance().displayImage(obj.optString("image"), ((ImageView)convertView.findViewById(R.id.imageview)), ImageLoaderConfigs.displayImageOptionsBg);
				}
				return convertView;
			}
		});
		mBulltinGallery.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				// TODO Auto-generated method stub
				if (position >= mNotifiesArr.length()) {
	                position = position % mNotifiesArr.length();
	            }
				JSONObject obj = mNotifiesArr.optJSONObject(position);
				if(obj != null){
					Intent intent = new Intent(mActivity, InformationActivity.class);
					intent.putExtra("name", mActivity.getResources().getString(R.string.announcement_title));
					intent.putExtra("isAnnouncement", true);
					intent.putExtra("type", 3);
					intent.putExtra("typeId", obj.optString("topTypeId"));
					intent.putExtra("id", obj.optString("typeId"));
					startActivity(intent);
				}
			}
		});
		
		mGridView.setAdapter(mGridAdapter = new ContentAdapter(){

			@Override
			public int getCount() {
				// TODO Auto-generated method stub
				if(mCampusServersArr != null && mCampusServersArr.length() > 0){
					return mCampusServersArr.length() > 7? 8 : mCampusServersArr.length() + 1;
				}
				return 1;
			}

			@Override
			public View getView(int position, View convertView, ViewGroup parent) {
				// TODO Auto-generated method stub
				if(convertView == null){
					convertView = LayoutInflater.from(mActivity).inflate(R.layout.listcell_myschoolyard_header_gridcell, null);
					convertView.setLayoutParams(new AbsListView.LayoutParams(mWidth / 4, mWidth / 4 + Utils.dipToPixels(mActivity, 15)));
				}
				
				if(position == getCount() - 1){
					((TextView)convertView.findViewById(R.id.text)).setText(mActivity.getResources().getString(R.string.more));
					((ImageView)convertView.findViewById(R.id.imageview)).setImageResource(R.drawable.icon_more);
				}
				else{
					((ImageView)convertView.findViewById(R.id.imageview)).setImageResource(0);
					JSONObject obj = mCampusServersArr.optJSONObject(position);
					((TextView)convertView.findViewById(R.id.text)).setText(obj.optString("name"));
					ImageLoader.getInstance().displayImage(obj.optString("image"), (ImageView)convertView.findViewById(R.id.imageview), ImageLoaderConfigs.displayImageOptionsBg);
				}
				return convertView;
			}
		});
		
		mGridView.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
					long arg3) {
				// TODO Auto-generated method stub
				if(arg2 == mGridAdapter.getCount() - 1){
					startActivity(new Intent(getActivity(), SchoolyardServiceMoreActivity.class));
					//startActivity(new Intent(getActivity(), EnterSchoolActivity.class));
				}
				else{
					DataLoader.getInstance().openNativeOrThirdWeb(mActivity, mCampusServersArr.optJSONObject(arg2), false);
				}
			}
		});
	}

	private void initListView(){
		initHeaderView();
		mListView = (PullToRefreshListView) mMainLayout.findViewById(R.id.pullto_listview);
		mListView.addHeaderView(mHeaderView);
		mListView.setAdapter(mListViewAdapter = new ContentAdapter(){

			@Override
			public int getCount() {
				// TODO Auto-generated method stub
				if(mAdsArr != null && mAdsArr.length() > 0){
					return mAdsArr.length();
				}
				return 0;
			}

			@Override
			public View getView(int position, View convertView, ViewGroup parent) {
				// TODO Auto-generated method stub
				if(convertView == null){
					convertView = ViewGroup.inflate(mActivity, R.layout.listcell_myschoolyard, null);
					convertView.setLayoutParams(new AbsListView.LayoutParams(LayoutParams.MATCH_PARENT, Utils.realSchoolListCellHeight(mActivity)));
				}
				JSONObject obj = mAdsArr.optJSONObject(position);
				if(obj != null){
					ImageLoader.getInstance().displayImage(obj.optString("image"), ((ImageView)convertView.findViewById(R.id.imageview)), ImageLoaderConfigs.displayImageOptionsBg);
				}
				return convertView;
			}
		});
		mListView.setOnRefreshListener(new OnRefreshListener() {
			
			@Override
			public void onRefresh() {
				// TODO Auto-generated method stub
				DataLoader.getInstance().startTaskForResult(TaskType.TaskOrMethod_MycampusGet, null, MySchoolyardFragment.this);
			}
		});
		
		mListView.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				// TODO Auto-generated method stub
				JSONObject obj = mAdsArr.optJSONObject(position - 2);
				if(obj != null){
					JSONObject resourceObj = obj.optJSONObject("resource");
					if(resourceObj == null){
						return;
					}
					DataLoader.getInstance().openResource(mActivity, obj.optInt("ownerResource"), resourceObj);
				}
			}
		});
		
		mListView.startRefresh();
	}
	
	@Override
	protected void onReceive(String brodecast) {
		// TODO Auto-generated method stub
		super.onReceive(brodecast);
		if(brodecast.equalsIgnoreCase(Configs.LoginStateChange)){
			mIsNeedRefresh = true;
		}
	}

	@Override
	public void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		if(mIsNeedRefresh){
			mIsNeedRefresh = false;
			if (!mListView.isStackFromBottom()) {
				mListView.setStackFromBottom(true);
			}
			mListView.setStackFromBottom(false);
			mListView.startRefresh();
		}
	}

	@Override
	public void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
		EventManager.getInstance().removeHandlerListenner(mHandler);
	}

	@Override
	public void onActivityResult(int requestCode, int resultCode, Intent data) {
		// TODO Auto-generated method stub
		super.onActivityResult(requestCode, resultCode, data);
		/*if(resultCode == Activity.RESULT_OK && resultCode != Activity.RESULT_CANCELED) {
			switch (requestCode) {
			case Configs.REQUESTCODE_Qrcode:
				Bundle bundle = data.getExtras();
				String msg = bundle.getString("result");
				
				Toast.makeText(mActivity, msg, Toast.LENGTH_SHORT).show();
				break;
			}
	    }*/
	}
	
	@Override
	public void taskFinished(TaskType type, Object result, boolean isHistory) {
		// TODO Auto-generated method stub
		super.taskFinished(type, result, isHistory);
		
		if(mListView != null){
			mListView.complete();
		}
		
		if(result == null){
			return;
		}
		
		if(result instanceof Error){
			Toast.makeText(mActivity, ((Error) result).getMessage(), Toast.LENGTH_SHORT).show();
			return;
		}
		
		switch (type) {
		case TaskOrMethod_MycampusGet:
			if(mHeaderView != null){
				mHeaderView.setVisibility(View.VISIBLE);
			}
			if(result instanceof JSONObject){
				if(((JSONObject)result).has("banner")){
					mBannerArr = ((JSONObject)result).optJSONArray("banner");					
					if(mBannerArr != null && mBannerArr.length() > 0){
						mHeaderView.findViewById(R.id.header_banner).setVisibility(View.VISIBLE);
						mPageGuide.setParams(mBannerArr.length(), Utils.dipToPixels(mActivity, 7), Utils.dipToPixels(mActivity, 7));
						mBannerGallery.setSelection(mBannerArr.length() * 1000000);
						mBannerGallery.setLength(mBannerArr.length());
						mBannerGallery.setDuration(4000);
						mBannerGallery.setAutoScroll();
					}
					else{
						mHeaderView.findViewById(R.id.header_banner).setVisibility(View.GONE);
					}
					
					if(mBannerGallery != null && mBannerGallery.getAdapter() != null){
						((ContentAdapter)mBannerGallery.getAdapter()).notifyDataSetChanged();
					}
				}
				if(((JSONObject)result).has("services")){
					mCampusServersArr = ((JSONObject)result).optJSONArray("services");
					if(mGridAdapter != null){
						mGridAdapter.notifyDataSetChanged();
					}
				}
				if(((JSONObject)result).has("notifies")){
					mNotifiesArr = ((JSONObject)result).optJSONArray("notifies");
					if(mNotifiesArr != null && mNotifiesArr.length() > 0){
						mHeaderView.findViewById(R.id.gallery_bulltin).setVisibility(View.VISIBLE);
						mHeaderView.findViewById(R.id.lines).setVisibility(View.VISIBLE);
						mBulltinGallery.setSelection(3 * 1000000);
						mBulltinGallery.setLength(3);
						mBulltinGallery.setDuration(5300);
						mBulltinGallery.setAutoScroll();
					}
					else{
						mHeaderView.findViewById(R.id.gallery_bulltin).setVisibility(View.GONE);
						mHeaderView.findViewById(R.id.lines).setVisibility(View.GONE);
					}
					if(mBulltinGallery != null && mBulltinGallery.getAdapter() != null){
						((ContentAdapter)mBulltinGallery.getAdapter()).notifyDataSetChanged();
					}
				}
				if(((JSONObject)result).has("ads")){
					mAdsArr = ((JSONObject)result).optJSONArray("ads");
					if(mListViewAdapter != null){
						mListViewAdapter.notifyDataSetChanged();
					}
				}
			}
			break;

		default:
			break;
		}
	}
}

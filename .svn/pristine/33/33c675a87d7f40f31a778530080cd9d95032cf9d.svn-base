package com.zhuochuang.hsej;

import java.util.HashMap;

import org.json.JSONArray;
import org.json.JSONObject;

import com.model.DataLoader;
import com.model.TaskType;
import com.util.ContentAdapter;
import com.util.Utils;

import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

public class SystemAnnouncementActivity extends ListViewPullActivity{

	private JSONArray mSysMsgList;
	private int mPageNo = 1;
	private boolean mIsReadMore = false;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setTitleText(R.string.source_name0);
		
		mListView.startRefresh();
	}

	@Override
	public void getHeaderView() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void getAdapter() {
		// TODO Auto-generated method stub
		mListAdapter = new ContentAdapter(){

			@Override
			public int getCount() {
				// TODO Auto-generated method stub
				if(mSysMsgList != null && mSysMsgList.length() > 0){
					return mSysMsgList.length();
				}
				return 0;
			}

			@Override
			public View getView(int position, View convertView, ViewGroup parent) {
				// TODO Auto-generated method stub
				if(convertView == null){
					convertView = ViewGroup.inflate(SystemAnnouncementActivity.this, R.layout.listcell_mymsg, null);
					convertView.findViewById(R.id.textview_content).setVisibility(View.GONE);
					//convertView.findViewById(R.id.textview_title).setVisibility(View.GONE);
				}
				((ImageView)convertView.findViewById(R.id.imageview)).setBackgroundResource(R.drawable.information_system);
				
				JSONObject obj = mSysMsgList.optJSONObject(position);
				if(obj != null){
					((TextView)convertView.findViewById(R.id.textview_title)).setText(obj.optString("content"));
					((TextView)convertView.findViewById(R.id.textview_date)).setText(Utils.friendlyTime(SystemAnnouncementActivity.this, obj.optLong("createDate")));
				}
				return convertView;
			}
		};
	}

	@Override
	public void OnItemClickListener(AdapterView<?> parent, View view,
			int position, long id) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void OnRefreshListener() {
		// TODO Auto-generated method stub
		mPageNo = 1;
		HashMap<String, Object> params = new HashMap<String, Object>();
		params.put("pageSize", 20);
		params.put("pageNo", mPageNo);
		params.put("resourceType", 0);
		DataLoader.getInstance().startTaskForResult(TaskType.TaskOrMethod_MessageListAdminMsgs, params, SystemAnnouncementActivity.this);
	}

	@Override
	public void OnRemoreListener() {
		// TODO Auto-generated method stub
		mPageNo++;
		mIsReadMore = true;
		HashMap<String, Object> params = new HashMap<String, Object>();
		params.put("pageSize", 20);
		params.put("pageNo", mPageNo);
		params.put("resourceType", 0);
		DataLoader.getInstance().startTaskForResult(TaskType.TaskOrMethod_MessageListAdminMsgs, params, SystemAnnouncementActivity.this);
	}

	@Override
	public void taskFinished(TaskType type, Object result, boolean isHistory) {
		// TODO Auto-generated method stub
		super.taskFinished(type, result, isHistory);
		if(mListView != null){
			mListView.complete();
		}
       
		if(result == null){
			return;
		}
		
		if(result instanceof Error){
			try {
				Toast.makeText(SystemAnnouncementActivity.this, ((Error) result).getMessage(), Toast.LENGTH_SHORT).show();
			} catch (Exception e) {
				// TODO: handle exception
			}
			return;
		}
		
		switch (type) {
		case TaskOrMethod_MessageListAdminMsgs:
			if(result instanceof JSONObject && ((JSONObject)result).has("items")){
				JSONArray temp = ((JSONObject)result).optJSONArray("items");
				if(temp != null && temp.length() > 19){
					mListView.setRemoreable(true);
				}
				else{
					mListView.setRemoreable(false);
				}
				if(mIsReadMore){
					mIsReadMore = false;
					mSysMsgList = DataLoader.getInstance().joinJSONArray(mSysMsgList, temp);
				}
				else{
					mSysMsgList = temp;
				}
				
				if(mListAdapter != null){
					mListAdapter.notifyDataSetChanged();
				}
			}
			else{
				mListView.setRemoreable(false);
			}
			break;

		default:
			break;
		}
	}
}

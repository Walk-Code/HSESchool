package com.zhuochuang.hsej.store;

import org.json.JSONObject;

import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.EditText;
import android.widget.Toast;

import com.model.DataLoader;
import com.model.TaskType;
import com.zhuochuang.hsej.BaseActivity;
import com.zhuochuang.hsej.R;

public class StoreUpdateShoppingAddressActivity extends BaseActivity{
	private EditText mContacter_name;
	private EditText mContacter_phone;
	private EditText mContacter_detail_address;
	private EditText mContacter_code;
	private static final int RESULT_MARK_FAILE = 0;
	private static final int RESULT_MARK_SUCCESS = 1;
	
		@Override
		protected void onCreate(Bundle arg0) {
			super.onCreate(arg0);
			setContentView(R.layout.store_shopping_update_address);
			setTitleText(R.string.update_address);
			mMainLayout.findViewById(R.id.ico_store_update).setVisibility(View.VISIBLE);
			initView();
			mMainLayout.findViewById(R.id.ico_store_update).setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {
				
					if( mContacter_name.getText().toString().length() > 0 &&  mContacter_phone.getText().toString().length() > 0 
							&& mContacter_code.getText().toString().length() > 0 && mContacter_detail_address.getText().toString().length() > 0){
						DataLoader.getInstance().startTaskForResult(TaskType.TaskOrMethod_UserAddressUpdateUserAddress,
								DataLoader.getInstance().setUpdateUserAddressTypeParams(getIntent().getStringExtra("id"),
										mContacter_name.getText().toString(),mContacter_phone.getText().toString(),
										 mContacter_code.getText().toString(),mContacter_detail_address.getText().toString(),RESULT_MARK_FAILE), StoreUpdateShoppingAddressActivity.this);
						showDialogCustom(DIALOG_CUSTOM);
					}else{
						Toast.makeText(StoreUpdateShoppingAddressActivity.this,getResources().getString(R.string.update_fail),Toast.LENGTH_SHORT).show();
					}
					
				}
			});
		}

		private void initView() {
			(mContacter_name = (EditText)findViewById(R.id.address_contacter_name)).setText(getIntent().getStringExtra("Name"));
			(mContacter_phone = (EditText)findViewById(R.id.address_contacter_phone)).setText(getIntent().getStringExtra("Phone"));
			//mContacter_code = (EditText) findViewById(R.id.address_contacter_code);
			(mContacter_detail_address = (EditText)findViewById(R.id.address_contacter_detail_address)).setText(getIntent().getStringExtra("Address"));
			findViewById(R.id.delete_address).setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {
					showDialogCustom(DIALOG_CUSTOM);
					DataLoader.getInstance().startTaskForResult(TaskType.TaskOrMethod_UserAddressDelUserAddress,
							DataLoader.getInstance().setDelUserAddressTypeParams(getIntent().getStringExtra("id")),StoreUpdateShoppingAddressActivity.this);
					
				}
			});
		   findViewById(R.id.set_default_address).setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				if( mContacter_name.getText().toString().length() > 0 &&  mContacter_phone.getText().toString().length() > 0 
						&& mContacter_code.getText().toString().length() > 0 && mContacter_detail_address.getText().toString().length() > 0){
					DataLoader.getInstance().startTaskForResult(TaskType.TaskOrMethod_UserAddressUpdateUserAddress,
							DataLoader.getInstance().setUpdateUserAddressTypeParams(getIntent().getStringExtra("id"),
									mContacter_name.getText().toString(),mContacter_phone.getText().toString(),
									 mContacter_code.getText().toString(),mContacter_detail_address.getText().toString(),RESULT_MARK_SUCCESS), StoreUpdateShoppingAddressActivity.this);
					showDialogCustom(DIALOG_CUSTOM);
				}else{
					Toast.makeText(StoreUpdateShoppingAddressActivity.this,getResources().getString(R.string.please_complete_information),Toast.LENGTH_SHORT).show();
				}
				
			}
		 });	
		}
		@Override
		public void taskFinished(TaskType type, Object result, boolean isHistory) {
			super.taskFinished(type, result, isHistory);
			if(result == null){
				return;
			}
			if(result instanceof Error){
				Toast.makeText(StoreUpdateShoppingAddressActivity.this, ((Error) result).getMessage(), Toast.LENGTH_SHORT).show();
				return;
			}
			switch (type) {
			case TaskOrMethod_UserAddressUpdateUserAddress:
				if(((JSONObject)result).has("result")){
					if("1".equals(((JSONObject)result).optString("result"))){
						removeDialogCustom();
						Toast.makeText(StoreUpdateShoppingAddressActivity.this,getResources().getString(R.string.update_success) , Toast.LENGTH_SHORT).show();						
						finish();
					}
				}				
				break;
			case TaskOrMethod_UserAddressDelUserAddress:
				if(((JSONObject)result).has("result")){
					if("1".equals(((JSONObject)result).optString("result"))){
						removeDialogCustom();
						Toast.makeText(StoreUpdateShoppingAddressActivity.this,getResources().getString(R.string.delete_success) , Toast.LENGTH_SHORT).show();
						finish();
					}
				}
				break;
			default:
				break;
			}
		}
}

package com.zhuochuang.hsej;

import java.lang.reflect.Method;

import org.apache.http.util.EncodingUtils;

import android.annotation.SuppressLint;
import android.annotation.TargetApi;
import android.content.Intent;
import android.net.http.SslError;
import android.os.Build;
import android.os.Bundle;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.webkit.GeolocationPermissions.Callback;
import android.webkit.SslErrorHandler;
import android.webkit.WebChromeClient;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.FrameLayout;
import android.widget.TextView;

import com.model.DataLoader;
import com.model.SharedPreferenceHandler;
import com.util.ColorProgressBar;
import com.util.Utils;
import com.zhuochuang.hsej.store.StoreShoppingCarActivity;

@TargetApi(Build.VERSION_CODES.HONEYCOMB_MR1)
@SuppressLint({ "SetJavaScriptEnabled", "DefaultLocale", "InflateParams" })
public class WebViewActivity extends BaseActivity{

	private WebView mWebView;
	private ColorProgressBar mColorProgressBar;
	private String mUrl = null;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_webview);
		findViewById(R.id.ico_webclose).setVisibility(View.VISIBLE);
		
		initWebView();
	}
	
	public void onWebCloseClick(View view){				
			finish();
	}
	
	@SuppressLint("NewApi")
	private void initWebView(){
		
		mUrl = getIntent().getStringExtra("url");

		mColorProgressBar = (ColorProgressBar) findViewById(R.id.progress);
		mWebView = (WebView) findViewById(R.id.webview);
		mWebView.removeJavascriptInterface("searchBoxJavaBredge_");
		WebSettings webSettings = mWebView.getSettings();
		webSettings.setUseWideViewPort(false);
		webSettings.setSupportZoom(true);
		webSettings.setBuiltInZoomControls(false);
        webSettings.setJavaScriptEnabled(true);
        webSettings.setDomStorageEnabled(true);
        webSettings.setLoadWithOverviewMode(true);
		
	    try {
	        if(Utils.getAndroidSDKVersion() >= 11){
	        	mWebView.setLayerType(View.LAYER_TYPE_SOFTWARE,null);
	        }
	    } 
	    catch (Exception e) {
	        e.printStackTrace();
	    }
	    
	    mColorProgressBar.setVisibility(View.VISIBLE);
    	mColorProgressBar.setProgress(1);
	    
	   mWebView.setWebChromeClient(new WebChromeClient() {
		   public void onProgressChanged(WebView view, int progress){
			   mColorProgressBar.setProgress(progress);
		   }

		   public void onGeolocationPermissionsShowPrompt(String origin,
					Callback callback) {
				// TODO Auto-generated method stub
				super.onGeolocationPermissionsShowPrompt(origin, callback);
				callback.invoke(origin, true, false);  
		   }
		});
	   
	   mWebView.setWebViewClient(new WebViewClient(){
		   public void onReceivedError(WebView view, int errorCode, String description, String failingUrl) {
			   mColorProgressBar.setVisibility(View.GONE);
		   }

			@Override
			public void onReceivedSslError(WebView view, SslErrorHandler handler,
					SslError error) {
				handler.proceed();
			}

			@Override
			public boolean shouldOverrideUrlLoading(WebView view, String url) {
				// TODO Auto-generated method stub
				return super.shouldOverrideUrlLoading(view, url);
			}
			
			 @Override
             public void onPageFinished(WebView view, String url) {
				 ((TextView)findViewById(R.id.textview_title)).setText(view.getTitle());
             }
	   });
	   
	   if(mUrl != null && mUrl.length() > 0 && mUrl.contains("/app/thirdparty/") && DataLoader.getInstance().isLogin()){
		   try {
			   if(mUrl.contains("?")){
		    		mUrl = mUrl + "&token=" + SharedPreferenceHandler.getXPSToken(WebViewActivity.this);
				}
				else{
					mUrl = mUrl + "?token=" + SharedPreferenceHandler.getXPSToken(WebViewActivity.this);
				}
			} catch (Exception e) {
				// TODO: handle exception
			}
	    }
	   
	   if(null != getIntent().getStringExtra("result")){
		   //findViewById(R.id.group_left).setVisibility(View.GONE);
		   mWebView.loadDataWithBaseURL("", getIntent().getStringExtra("result"),"text/html", "UTF-8", "");
	   }else{		   
		   mWebView.loadUrl(mUrl);
	   }
	}
	
	@Override
	public void onBackClick(View v) {
		// TODO Auto-generated method stub
		if(mWebView != null && mWebView.canGoBack()){
			mWebView.goBack();
		}
    	else{
    		this.finish();
    	}
	}

	@Override  
    public boolean onKeyDown(int keyCode, KeyEvent event) {  
		
        if(keyCode == KeyEvent.KEYCODE_BACK && event.getAction() == KeyEvent.ACTION_DOWN){  
        	if(mWebView != null && mWebView.canGoBack()){
    			mWebView.goBack();
    		}
        	else{
        		this.finish();
        	}
            return true;  
        }  
        return super.onKeyDown(keyCode, event);
    }  
	
	private void callHiddenWebViewMethod(String name){
        if (mWebView != null){
            try{
                Method method = WebView.class.getMethod(name);
                method.invoke(mWebView);
            }
            catch (Exception e){
            }
        }
    }

	@Override
	protected void onPause() {
		// TODO Auto-generated method stub
		super.onPause();
		if(mWebView != null){
            if(Utils.getAndroidSDKVersion() < 11){
            	mWebView.pauseTimers();

                if (isFinishing()){
                	mWebView.loadUrl("about:blank");
                    setContentView(new FrameLayout(this));
                }
                callHiddenWebViewMethod("onPause");
            }
            else{
            	mWebView.onPause();
            }
        }
	}
	
	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		if(mWebView != null){
            if(Utils.getAndroidSDKVersion() < 11){
                callHiddenWebViewMethod("onResume");
            }
            else{
            	mWebView.onResume();
            }
        }
	}
	
	@Override
	public void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
		if(mWebView != null){
			mWebView.setVisibility(View.GONE);
            if(mMainLayout != null){
            	mMainLayout.removeView(mWebView);
            }
            mWebView.removeAllViews();
            mWebView.destroy();
        }
	}
}
